unm=$(uname -n);

if [ $unm = "parsasrv1.epfl.ch" ];
then
    run_script="./run"
fi;

if [ $unm = "maglite" ];
then
	max_cores=64;
elif [ $unm = "lpd48core" ];
then
	max_cores=48;
elif [ $unm = "parsasrv1.epfl.ch" ];
then
	max_cores=36;
elif [ $unm = "diassrv8" ];
then
	max_cores=80;
elif [ $unm = "lpdpc34" ];
then
	max_cores=8;
elif [ $unm = "lpdxeon2680" ];
then
	max_cores=40;
else
	max_cores=48;
fi;


if [ "$cores" = "all" ];
then
    cores=$(seq 2 1 $max_cores);
elif [ "$cores" = "socket" ];
then
    if [ $unm = "maglite" ];
    then
	cores=$(seq 8 8 64);
    elif [ $unm = "parsasrv1.epfl.ch" ];
    then
	cores=$(seq 6 6 36);
    elif [ $unm = "diassrv8" ];
    then
	cores=$(seq 10 10 80);
    elif [ $unm = "lpdpc34" ];
    then
	cores=$(seq 2 1 8);
    elif [ $unm = "lpdxeon2680" ];
    then
	cores=$(seq 10 10 40);
    elif [ $unm = "ol-collab1" ];
    then
	cores=$(seq 32 32 256);
    else
	cores=$(seq 6 6 48);
    fi;
elif [ "$cores" = "insocket" ];
then
    if [ $unm = "maglite" ];
    then
	cores=$(seq 8 8 64);
    elif [ $unm = "parsasrv1.epfl.ch" ];
    then
	cores=$(seq 6 6 36);
    elif [ $unm = "diassrv8" ];
    then
	cores="$(seq 2 1 9) $(seq 10 10 80)";
    elif [ $unm = "lpdpc34" ];
    then
	cores=$(seq 2 1 8);
    elif [ $unm = "lpdxeon2680" ];
    then
	cores="$(seq 2 1 9) $(seq 10 10 40)";
    else
	cores="2 3 4 5 $(seq 6 6 48)";
    fi;
elif [ "$cores" = "step" ];
then
    if [ $unm = "maglite" ];
    then
	cores=$(seq 7 1 10);
    elif [ $unm = "parsasrv1.epfl.ch" ];
    then
	cores=$(seq 5 1 8);
    elif [ $unm = "diassrv8" ];
    then
	cores=$(seq 9 1 11);
    elif [ $unm = "lpdpc34" ];
    then
	cores=$(seq 2 1 8);
    else
	cores=$(seq 5 1 8);
    fi;
elif [ "$cores" = "eights" ];
then
    cores=$(seq 8 8 $max_cores);
elif [ "$cores" = "twelve" ];
then
    cores=$(seq 2 1 12);
fi;
